{"ast":null,"code":"import { UserActionType } from \"../action-types\";\nconst inittialPostList = [];\nconst reducer = function () {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : inittialPostList;\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n  switch (action.type) {\n    case UserActionType.SET_USERS:\n      return [...action.payload];\n    case UserActionType.ADD_POST:\n      return state.map((user, index) => {\n        if (user.id === action.payload.author) {\n          return {\n            ...user,\n            postList: [...user.postList, action.payload.id]\n          };\n        } else {\n          return user;\n        }\n      });\n    case UserActionType.MARK_POST:\n      return state.map((user, index) => {\n        if (user.id === action.payload.currentUserID) {\n          return user.bookmarkList.includes(action.payload.postID) ? {\n            ...user,\n            bookmarkList: user.bookmarkList.filter(bookmarkItem => bookmarkItem !== action.payload.postID)\n          } : {\n            ...user,\n            bookmarkList: [...user.bookmarkList, action.payload.postID]\n          };\n        } else {\n          return user;\n        }\n      });\n    case UserActionType.SEED_POST:\n      return state.map((user, index) => {\n        if (user.id === action.payload.currentUserID) {\n          return user.seedList.includes(action.payload.postID) ? {\n            ...user,\n            seedList: user.seedList.filter(seedItem => seedItem !== action.payload.postID)\n          } : {\n            ...user,\n            seedList: [...user.seedList, action.payload.postID]\n          };\n        } else {\n          return user;\n        }\n      });\n    case UserActionType.FLAG_POST:\n      return state.map((user, index) => {\n        if (user.id === action.payload.currentUserID) {\n          return user.flagList.includes(action.payload.postID) ? {\n            ...user,\n            flagList: user.flagList.filter(flagItem => flagItem !== action.payload.postID)\n          } : {\n            ...user,\n            flagList: [...user.flagList, action.payload.postID]\n          };\n        } else {\n          return user;\n        }\n      });\n    default:\n      return state;\n  }\n};\nexport default reducer;","map":{"version":3,"names":["UserActionType","inittialPostList","reducer","state","action","type","SET_USERS","payload","ADD_POST","map","user","index","id","author","postList","MARK_POST","currentUserID","bookmarkList","includes","postID","filter","bookmarkItem","SEED_POST","seedList","seedItem","FLAG_POST","flagList","flagItem"],"sources":["/Users/mac/Documents/My Project/typescript-fpthub/src/redux/reducers/userListReducer.ts"],"sourcesContent":["import { IState as IProps } from \"../../App\";\nimport { UserActionType } from \"../action-types\";\nimport { UserAction } from \"../actions/userAction\";\n\nconst inittialPostList: IProps[\"userList\"] = [];\n\nconst reducer = (state = inittialPostList, action: UserAction) => {\n  switch (action.type) {\n    case UserActionType.SET_USERS:\n      return [...action.payload];\n    case UserActionType.ADD_POST:\n      return state.map((user, index) => {\n        if (user.id === action.payload.author) {\n          return  {\n                ...user,\n                postList: [...user.postList, action.payload.id],\n              };\n        } else {\n          return user;\n        }\n      });\n    case UserActionType.MARK_POST:\n      return state.map((user, index) => {\n        if (user.id === action.payload.currentUserID) {\n          return user.bookmarkList.includes(action.payload.postID)\n            ? {\n                ...user,\n                bookmarkList: user.bookmarkList.filter(\n                  (bookmarkItem) => bookmarkItem !== action.payload.postID\n                ),\n              }\n            : {\n                ...user,\n                bookmarkList: [...user.bookmarkList, action.payload.postID],\n              };\n        } else {\n          return user;\n        }\n      });\n    case UserActionType.SEED_POST:\n      return state.map((user, index) => {\n        if (user.id === action.payload.currentUserID) {\n          return user.seedList.includes(action.payload.postID)\n            ? {\n                ...user,\n                seedList: user.seedList.filter(\n                  (seedItem) => seedItem !== action.payload.postID\n                ),\n              }\n            : {\n                ...user,\n                seedList: [...user.seedList, action.payload.postID],\n              };\n        } else {\n          return user;\n        }\n      });\n    case UserActionType.FLAG_POST:\n      return state.map((user, index) => {\n        if (user.id === action.payload.currentUserID) {\n          return user.flagList.includes(action.payload.postID)\n            ? {\n                ...user,\n                flagList: user.flagList.filter(\n                  (flagItem) => flagItem !== action.payload.postID\n                ),\n              }\n            : {\n                ...user,\n                flagList: [...user.flagList, action.payload.postID],\n              };\n        } else {\n          return user;\n        }\n      });\n    default:\n      return state;\n  }\n};\n\nexport default reducer;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}