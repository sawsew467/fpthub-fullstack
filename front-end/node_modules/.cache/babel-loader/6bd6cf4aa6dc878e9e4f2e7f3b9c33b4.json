{"ast":null,"code":"import axios from \"axios\";\nexport const getAllPosts = async () => {\n  try {\n    const option = {\n      method: \"get\",\n      url: \"/api/v1/posts\"\n    };\n    const response = await axios(option);\n    const posts = response.data.data.posts; // console.log(posts);\n\n    return posts;\n  } catch (error) {\n    console.log(error);\n  }\n};\nexport const createOnePost = async newPost => {\n  try {\n    const token = localStorage.getItem(\"token\");\n    const option = {\n      method: \"post\",\n      url: \"/api/v1/posts\",\n      data: newPost,\n      key: \"value\",\n      headers: {\n        Authorization: `Bearer ${token}`\n      }\n    };\n    const response = await axios(option); // console.log(response.data);\n  } catch (error) {}\n};\nexport const updateOnePost = async (_idPost, updatedData) => {\n  try {\n    const token = localStorage.getItem(\"token\");\n    const option = {\n      method: \"put\",\n      url: `/api/v1/posts/${_idPost}`,\n      data: {\n        updatedData,\n        _idPost\n      },\n      headers: {\n        Authorization: `Bearer ${token}`\n      }\n    };\n    const response = await axios(option);\n  } catch (error) {\n    console.log(error);\n  }\n};","map":{"version":3,"names":["axios","getAllPosts","option","method","url","response","posts","data","error","console","log","createOnePost","newPost","token","localStorage","getItem","key","headers","Authorization","updateOnePost","_idPost","updatedData"],"sources":["/Users/mac/Documents/My Project/fpthub-fullstack/front-end/src/apis/postApis.js"],"sourcesContent":["import axios from \"axios\";\n\nexport const getAllPosts = async () => {\n  try {\n    const option = {\n      method: \"get\",\n      url: \"/api/v1/posts\",\n    };\n    const response = await axios(option);\n    const posts = response.data.data.posts;\n    // console.log(posts);\n    return posts;\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nexport const createOnePost = async (newPost) => {\n  try {\n    const token = localStorage.getItem(\"token\");\n    const option = {\n      method: \"post\",\n      url: \"/api/v1/posts\",\n      data: newPost,\n      key: \"value\",\n      headers: { Authorization: `Bearer ${token}` },\n    };\n    const response = await axios(option);\n    // console.log(response.data);\n  } catch (error) {}\n};\n\nexport const updateOnePost = async (_idPost, updatedData) => {\n  try {\n    const token = localStorage.getItem(\"token\");\n    const option = {\n      method: \"put\",\n      url: `/api/v1/posts/${_idPost}`,\n      data: {updatedData, _idPost},\n      headers: { Authorization: `Bearer ${token}` },\n    };\n    const response = await axios(option);\n  } catch (error) {\n    console.log(error);\n  }\n};\n"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,OAAO,MAAMC,WAAW,GAAG,YAAY;EACrC,IAAI;IACF,MAAMC,MAAM,GAAG;MACbC,MAAM,EAAE,KADK;MAEbC,GAAG,EAAE;IAFQ,CAAf;IAIA,MAAMC,QAAQ,GAAG,MAAML,KAAK,CAACE,MAAD,CAA5B;IACA,MAAMI,KAAK,GAAGD,QAAQ,CAACE,IAAT,CAAcA,IAAd,CAAmBD,KAAjC,CANE,CAOF;;IACA,OAAOA,KAAP;EACD,CATD,CASE,OAAOE,KAAP,EAAc;IACdC,OAAO,CAACC,GAAR,CAAYF,KAAZ;EACD;AACF,CAbM;AAeP,OAAO,MAAMG,aAAa,GAAG,MAAOC,OAAP,IAAmB;EAC9C,IAAI;IACF,MAAMC,KAAK,GAAGC,YAAY,CAACC,OAAb,CAAqB,OAArB,CAAd;IACA,MAAMb,MAAM,GAAG;MACbC,MAAM,EAAE,MADK;MAEbC,GAAG,EAAE,eAFQ;MAGbG,IAAI,EAAEK,OAHO;MAIbI,GAAG,EAAE,OAJQ;MAKbC,OAAO,EAAE;QAAEC,aAAa,EAAG,UAASL,KAAM;MAAjC;IALI,CAAf;IAOA,MAAMR,QAAQ,GAAG,MAAML,KAAK,CAACE,MAAD,CAA5B,CATE,CAUF;EACD,CAXD,CAWE,OAAOM,KAAP,EAAc,CAAE;AACnB,CAbM;AAeP,OAAO,MAAMW,aAAa,GAAG,OAAOC,OAAP,EAAgBC,WAAhB,KAAgC;EAC3D,IAAI;IACF,MAAMR,KAAK,GAAGC,YAAY,CAACC,OAAb,CAAqB,OAArB,CAAd;IACA,MAAMb,MAAM,GAAG;MACbC,MAAM,EAAE,KADK;MAEbC,GAAG,EAAG,iBAAgBgB,OAAQ,EAFjB;MAGbb,IAAI,EAAE;QAACc,WAAD;QAAcD;MAAd,CAHO;MAIbH,OAAO,EAAE;QAAEC,aAAa,EAAG,UAASL,KAAM;MAAjC;IAJI,CAAf;IAMA,MAAMR,QAAQ,GAAG,MAAML,KAAK,CAACE,MAAD,CAA5B;EACD,CATD,CASE,OAAOM,KAAP,EAAc;IACdC,OAAO,CAACC,GAAR,CAAYF,KAAZ;EACD;AACF,CAbM"},"metadata":{},"sourceType":"module"}