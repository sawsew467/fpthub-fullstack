{"ast":null,"code":"import { UserActionType } from \"../action-types\";\nconst inittialPostList = [];\nconst reducer = function () {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : inittialPostList;\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n  switch (action.type) {\n    case UserActionType.SET_USERS:\n      return [...action.payload];\n    case UserActionType.UPDATE_USER:\n      console.log(\"!!!\");\n      return state.map((user, index) => {\n        return user.id === action.payload.updateUserID ? action.payload.updateData : user;\n      });\n    case UserActionType.ADD_POST:\n      return state.map((user, index) => {\n        if (user.id === action.payload.author) {\n          return {\n            ...user,\n            postList: [...user.postList, action.payload.id]\n          };\n        } else {\n          return user;\n        }\n      });\n    case UserActionType.MARK_POST:\n      return state.map((user, index) => {\n        if (user.id === action.payload.currentUserID) {\n          return user.bookmarkList.includes(action.payload.postID) ? {\n            ...user,\n            bookmarkList: user.bookmarkList.filter(bookmarkItem => bookmarkItem !== action.payload.postID)\n          } : {\n            ...user,\n            bookmarkList: [...user.bookmarkList, action.payload.postID]\n          };\n        } else {\n          return user;\n        }\n      });\n    case UserActionType.SEED_POST:\n      return state.map((user, index) => {\n        if (user.id === action.payload.currentUserID) {\n          return user.seedList.includes(action.payload.postID) ? {\n            ...user,\n            seedList: user.seedList.filter(seedItem => seedItem !== action.payload.postID)\n          } : {\n            ...user,\n            seedList: [...user.seedList, action.payload.postID]\n          };\n        } else {\n          return user;\n        }\n      });\n    case UserActionType.FLAG_POST:\n      return state.map((user, index) => {\n        if (user.id === action.payload.currentUserID) {\n          return user.flagList.includes(action.payload.postID) ? {\n            ...user,\n            flagList: user.flagList.filter(flagItem => flagItem !== action.payload.postID)\n          } : {\n            ...user,\n            flagList: [...user.flagList, action.payload.postID]\n          };\n        } else {\n          return user;\n        }\n      });\n    default:\n      return state;\n  }\n};\nexport default reducer;","map":{"version":3,"names":["UserActionType","inittialPostList","reducer","state","action","type","SET_USERS","payload","UPDATE_USER","console","log","map","user","index","id","updateUserID","updateData","ADD_POST","author","postList","MARK_POST","currentUserID","bookmarkList","includes","postID","filter","bookmarkItem","SEED_POST","seedList","seedItem","FLAG_POST","flagList","flagItem"],"sources":["/Users/mac/Documents/My Project/typescript-fpthub/src/redux/reducers/userListReducer.ts"],"sourcesContent":["import { IState as IProps } from \"../../App\";\nimport { UserActionType } from \"../action-types\";\nimport { UserAction } from \"../actions/userAction\";\n\nconst inittialPostList: IProps[\"userList\"] = [];\n\nconst reducer = (state = inittialPostList, action: UserAction) => {\n  switch (action.type) {\n    case UserActionType.SET_USERS:\n      return [...action.payload];\n    case UserActionType.UPDATE_USER:\n  console.log(\"!!!\");\n      return state.map((user, index) => {\n        return user.id === action.payload.updateUserID\n          ? action.payload.updateData\n          : user;\n      });\n    case UserActionType.ADD_POST:\n      return state.map((user, index) => {\n        if (user.id === action.payload.author) {\n          return {\n            ...user,\n            postList: [...user.postList, action.payload.id],\n          };\n        } else {\n          return user;\n        }\n      });\n    case UserActionType.MARK_POST:\n      return state.map((user, index) => {\n        if (user.id === action.payload.currentUserID) {\n          return user.bookmarkList.includes(action.payload.postID)\n            ? {\n                ...user,\n                bookmarkList: user.bookmarkList.filter(\n                  (bookmarkItem) => bookmarkItem !== action.payload.postID\n                ),\n              }\n            : {\n                ...user,\n                bookmarkList: [...user.bookmarkList, action.payload.postID],\n              };\n        } else {\n          return user;\n        }\n      });\n    case UserActionType.SEED_POST:\n      return state.map((user, index) => {\n        if (user.id === action.payload.currentUserID) {\n          return user.seedList.includes(action.payload.postID)\n            ? {\n                ...user,\n                seedList: user.seedList.filter(\n                  (seedItem) => seedItem !== action.payload.postID\n                ),\n              }\n            : {\n                ...user,\n                seedList: [...user.seedList, action.payload.postID],\n              };\n        } else {\n          return user;\n        }\n      });\n    case UserActionType.FLAG_POST:\n      return state.map((user, index) => {\n        if (user.id === action.payload.currentUserID) {\n          return user.flagList.includes(action.payload.postID)\n            ? {\n                ...user,\n                flagList: user.flagList.filter(\n                  (flagItem) => flagItem !== action.payload.postID\n                ),\n              }\n            : {\n                ...user,\n                flagList: [...user.flagList, action.payload.postID],\n              };\n        } else {\n          return user;\n        }\n      });\n    default:\n      return state;\n  }\n};\n\nexport default reducer;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}